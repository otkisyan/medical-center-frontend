name: CI

on:
  push:
    branches: [main]
    paths-ignore:
      - "README.md"
      - "**.md"
  pull_request:
    branches: [main]
    paths-ignore:
      - "README.md"
      - "**.md"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Run Linter
        run: npm run lint

  build:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache npm and Next.js build
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

  push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/medical-center-reception-frontend:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/medical-center-reception-frontend:latest
          build-args: |
            NEXT_PUBLIC_API_BASE_URL_SERVER=${{ vars.NEXT_PUBLIC_API_BASE_URL_SERVER }}
            NEXT_PUBLIC_API_BASE_URL_CLIENT=${{ vars.NEXT_PUBLIC_API_BASE_URL_CLIENT }}
